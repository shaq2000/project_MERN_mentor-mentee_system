{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api/courses\";\n\nclass CourseService {\n  post(title, description, price) {\n    let token;\n\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n\n    return axios.post(API_URL, {\n      title,\n      description,\n      price\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n\n  getEnrolledCourses(_id) {\n    let token;\n\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n\n    return axios.get(API_URL + \"/mentee/\" + _id, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n\n  getCourseByName(name) {\n    let token;\n\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n\n    return axios.get(API_URL, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n\n  getAllCourses() {\n    let token;\n\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n\n    return axios.get(API_URL + \"/mentor/\" + _id, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n\n  get(_id) {\n    let token;\n\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n\n    return axios.get(API_URL + \"/mentor/\" + _id, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n\n  enroll(_id, user_id) {\n    let token;\n\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n\n    return axios.post(API_URL + \"/enroll/\" + _id, {\n      user_id\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n\n}\n\nexport default new CourseService();","map":{"version":3,"sources":["C:/Users/chunyu/PC/Desktop/side_project_MERN_system/client/src/services/course.service.js"],"names":["axios","API_URL","CourseService","post","title","description","price","token","localStorage","getItem","JSON","parse","headers","Authorization","getEnrolledCourses","_id","get","getCourseByName","name","getAllCourses","enroll","user_id"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nconst API_URL = \"http://localhost:8080/api/courses\";\r\n\r\nclass CourseService {\r\n  post(title, description, price) {\r\n    let token;\r\n    if (localStorage.getItem(\"user\")) {\r\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n    } else {\r\n      token = \"\";\r\n    }\r\n\r\n    return axios.post(\r\n      API_URL,\r\n      { title, description, price },\r\n      {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getEnrolledCourses(_id) {\r\n    let token;\r\n    if (localStorage.getItem(\"user\")) {\r\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n    } else {\r\n      token = \"\";\r\n    }\r\n\r\n    return axios.get(API_URL + \"/mentee/\" + _id, {\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    });\r\n  }\r\n\r\n  getCourseByName(name) {\r\n    let token;\r\n    if (localStorage.getItem(\"user\")) {\r\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n    } else {\r\n      token = \"\";\r\n    }\r\n\r\n    return axios.get(API_URL, {\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    });\r\n  }\r\n\r\n  getAllCourses() {\r\n    let token;\r\n    if (localStorage.getItem(\"user\")) {\r\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n    } else {\r\n      token = \"\";\r\n    }\r\n    return axios.get(API_URL + \"/mentor/\" + _id, {\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    });\r\n  }\r\n\r\n  get(_id) {\r\n    let token;\r\n    if (localStorage.getItem(\"user\")) {\r\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n    } else {\r\n      token = \"\";\r\n    }\r\n    return axios.get(API_URL + \"/mentor/\" + _id, {\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    });\r\n  }\r\n\r\n  enroll(_id, user_id) {\r\n    let token;\r\n    if (localStorage.getItem(\"user\")) {\r\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n    } else {\r\n      token = \"\";\r\n    }\r\n\r\n    return axios.post(\r\n      API_URL + \"/enroll/\" + _id,\r\n      { user_id },\r\n      {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport default new CourseService();\r\n"]},"metadata":{},"sourceType":"module"}